// Code generated by MockGen. DO NOT EDIT.
// Source: ./client/coinDeskClientInterface.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	models "Golang-assignment-srikomm/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCoinDeskClientInterface is a mock of CoinDeskClientInterface interface.
type MockCoinDeskClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCoinDeskClientInterfaceMockRecorder
}

// MockCoinDeskClientInterfaceMockRecorder is the mock recorder for MockCoinDeskClientInterface.
type MockCoinDeskClientInterfaceMockRecorder struct {
	mock *MockCoinDeskClientInterface
}

// NewMockCoinDeskClientInterface creates a new mock instance.
func NewMockCoinDeskClientInterface(ctrl *gomock.Controller) *MockCoinDeskClientInterface {
	mock := &MockCoinDeskClientInterface{ctrl: ctrl}
	mock.recorder = &MockCoinDeskClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoinDeskClientInterface) EXPECT() *MockCoinDeskClientInterfaceMockRecorder {
	return m.recorder
}

// GetBTCCurrentPrice mocks base method.
func (m *MockCoinDeskClientInterface) GetBTCCurrentPrice() (models.Crypto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBTCCurrentPrice")
	ret0, _ := ret[0].(models.Crypto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBTCCurrentPrice indicates an expected call of GetBTCCurrentPrice.
func (mr *MockCoinDeskClientInterfaceMockRecorder) GetBTCCurrentPrice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBTCCurrentPrice", reflect.TypeOf((*MockCoinDeskClientInterface)(nil).GetBTCCurrentPrice))
}
