// Code generated by MockGen. DO NOT EDIT.
// Source: ./client/CryptoClientInterface.go

// Package mock_client is a generated GoMock package.
package mock_client

import (
	models "Golang-assignment-srikomm/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCryptoClientInterface is a mock of CryptoClientInterface interface.
type MockCryptoClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCryptoClientInterfaceMockRecorder
}

// MockCryptoClientInterfaceMockRecorder is the mock recorder for MockCryptoClientInterface.
type MockCryptoClientInterfaceMockRecorder struct {
	mock *MockCryptoClientInterface
}

// NewMockCryptoClientInterface creates a new mock instance.
func NewMockCryptoClientInterface(ctrl *gomock.Controller) *MockCryptoClientInterface {
	mock := &MockCryptoClientInterface{ctrl: ctrl}
	mock.recorder = &MockCryptoClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCryptoClientInterface) EXPECT() *MockCryptoClientInterfaceMockRecorder {
	return m.recorder
}

// GetCurrentPrice mocks base method.
func (m *MockCryptoClientInterface) GetCurrentPrice() (models.Crypto, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentPrice")
	ret0, _ := ret[0].(models.Crypto)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentPrice indicates an expected call of GetCurrentPrice.
func (mr *MockCryptoClientInterfaceMockRecorder) GetCurrentPrice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentPrice", reflect.TypeOf((*MockCryptoClientInterface)(nil).GetCurrentPrice))
}
